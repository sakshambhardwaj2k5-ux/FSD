// app.js
const express = require("express");
const app = express();

app.use(express.json()); // for parsing JSON bodies

// In-memory array to store cards
let cards = [];
let nextId = 1; // simple auto-increment ID

// ---- Routes ----

// List all cards
app.get("/cards", (req, res) => {
  res.json(cards);
});

// Add a new card
app.post("/cards", (req, res) => {
  const { suit, value } = req.body;

  if (!suit || !value) {
    return res.status(400).json({ message: "Suit and value are required" });
  }

  const newCard = {
    id: nextId++,
    suit,
    value,
  };

  cards.push(newCard);
  res.status(201).json({ message: "Card added successfully", card: newCard });
});

// Get a card by ID
app.get("/cards/:id", (req, res) => {
  const cardId = parseInt(req.params.id);
  const card = cards.find((c) => c.id === cardId);

  if (!card) {
    return res.status(404).json({ message: "Card not found" });
  }

  res.json(card);
});

// Delete a card by ID
app.delete("/cards/:id", (req, res) => {
  const cardId = parseInt(req.params.id);
  const cardIndex = cards.findIndex((c) => c.id === cardId);

  if (cardIndex === -1) {
    return res.status(404).json({ message: "Card not found" });
  }

  const deletedCard = cards.splice(cardIndex, 1);
  res.json({ message: "Card deleted successfully", card: deletedCard[0] });
});

// ---- Start server ----
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
